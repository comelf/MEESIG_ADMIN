<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ItemMapperA">
        
        <select id="selectSortedItemListForManagement" resultType="itemForList">
        	select i.item_id, c.category_name, s.shop_name, i.item_name, i.item_sell_price, i.item_option_state, l.location_name, m.media_file_name, m.media_file_extension, m.media_file_path
				from items as i
					left join item_category as c 
			        	on i.item_category_id = c.category_id
			        left join shops as s
			        	on i.shops_shop_id  = s.shop_id
			        join locations as l 
			        	on s.LOCATIONS_LOCATION_ID =l.location_id
			        join media as m
			        	on i.media_media_id = m.media_id
				order by i.item_id desc limit #{start}, #{count} 
        </select>
        
        <select id="countTotalItem" resultType="int">
        	select count(item_id) from items
        </select>
        

        <select id="selectShopListAll" resultType="shop">
        	select * from shops
        </select>
        
        <select id="findItemByIdForManagement" resultType="item">
        	
        </select>
        
        <insert id="createItemInAdminPage" useGeneratedKeys="true" keyProperty="item_id">
        	insert into items (item_category_id, shops_shop_id, item_name, item_path_url, media_media_id, item_description, item_sell_price, item_supply_price, item_content, item_origin, item_shipping, item_sale_price, item_daily_stock, item_option_state)
        				values (#{item_category_id}, #{shops_shop_id}, #{item_name}, #{item_path_url}, #{media_media_id}, #{item_description}, #{item_sell_price}, #{item_supply_price}, #{item_content}, #{item_origin}, #{item_shipping}, #{item_sale_price}, #{item_daily_stock}, #{item_option_state} )
        </insert>
        
        <update id="updateItemInfoById">
        	update items set item_category_id = #{item_category_id}, 
        						shops_shop_id = #{shops_shop_id}, 
        							item_name = #{item_name},
        						item_path_url = #{item_path_url}, 
        					   media_media_id = #{media_media_id},
        					 item_description = #{item_description},
        					  item_sell_price = #{item_sell_price}, 
        					item_supply_price = #{item_supply_price}, 
        					 	 item_content = #{item_content}, 
        					 	  item_origin = #{item_origin}, 
        					 	item_shipping = #{item_shipping},
        					  item_sale_price = #{item_sale_price}, 
        					 item_daily_stock = #{item_daily_stock},
        					 	   item_option_state = #{item_option_state}
				where item_id = #{item_id}
        </update>
        
        <select id="searchItemList" resultType="itemForList">
        
        <![CDATA[select i.item_id, c.category_name, s.shop_name, i.item_name, i.item_sell_price, i.item_option_state, l.location_name, m.media_file_name, m.media_file_extension, m.media_file_path
				from items as i
					left join item_category as c 
			        	on i.item_category_id = c.category_id
			        left join shops as s
			        	on i.shops_shop_id  = s.shop_id
			        join locations as l 
			        	on s.LOCATIONS_LOCATION_ID =l.location_id
			        join media as m
			        	on i.media_media_id = m.media_id
				where ${type} like '%${query}%' limit 100]]>
        </select>
        
        <select id="findItemIdByPathUrl" resultType="item">
        	select * from items where item_path_url = #{path_url} limit 1;
        </select>
        
        <select id="countItems" resultType="int">
        	select count(*) from items;
        </select>
        
        
        <!-- Item Insert -->
        <insert id="insertItemShippingDayWithDays" >
        	insert into shipping_day (items_item_id, day_mon, day_tue, day_wed, day_thu, day_fri, day_sat, day_sun, day_send_time)
    						  values (#{item_id}, #{day_mon}, #{day_tue}, #{day_wed}, #{day_thu}, #{day_fri}, #{day_sat}, #{day_sun}, #{day_send_time})
        </insert>
        
        <insert id="insertItemIntoShippingDay">
        	insert into shipping_day (day_send_day) values(#{day_send_day})
        </insert>
        
        <insert id="insertItemShippingPriceWithShippingPrice">
        	insert into shipping_price (items_item_id, price_group_id, price_price, price_desc)
        				values
					        <foreach collection="price_options" item="priceOption"  separator=", " >
					            	(#{items_item_id}, #{priceOption.index}, #{priceOption.price}, #{priceOption.desc})
					        </foreach>
        </insert>
        
        <insert id="insertItemOptions" parameterType="itemOption">
        	insert into item_option (items_item_id,option_tag, option_title, option_row_id ,option_row_value,option_row_price) 
        		values <foreach collection="optionBlocks" item="block" separator=", " index="opt_id">
        					<foreach collection="block.optionRow" item="row" separator=", " index="i">
        						( #{items_item_id}, #{opt_id}, #{block.optionTitle}, #{i}, #{row.description}, #{row.price} )
        					</foreach>
        			   </foreach>
        </insert>
        
        
        <!-- Category -->
        <select id="selectCatetoryListAll" resultType="category">
        	select * from item_category
        </select>
        <insert id="insertCategory">
        	insert into item_category(category_name) values (#{category_name})
        </insert>
        <select id="selectCategoryById" resultType="category">
        	select * from item_category where category_id = #{category_id}
        </select>
        <update id="updateCategoryById">
        	update item_category set category_name = #{category_name} where category_id = #{category_id}
        </update>
        <delete id="deleteCategoryById">
        	delete from item_category where category_id = #{category_id}
        </delete>
        
</mapper>
